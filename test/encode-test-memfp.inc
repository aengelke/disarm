
// STR/LDR scaled immediate
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), -0x1));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), -0x1));
TEST(0x3d000001, de64_STRbu(DA_V(1), DA_GP(0), 0));
TEST(0x3d400001, de64_LDRbu(DA_V(1), DA_GP(0), 0));
TEST(0x3d000401, de64_STRbu(DA_V(1), DA_GP(0), 0x1));
TEST(0x3d400401, de64_LDRbu(DA_V(1), DA_GP(0), 0x1));
TEST(0x3d0007e1, de64_STRbu(DA_V(1), DA_SP, 0x1));
TEST(0x3d4007e1, de64_LDRbu(DA_V(1), DA_SP, 0x1));
TEST(0x3d000801, de64_STRbu(DA_V(1), DA_GP(0), 0x2));
TEST(0x3d400801, de64_LDRbu(DA_V(1), DA_GP(0), 0x2));
TEST(0x3d3ffc01, de64_STRbu(DA_V(1), DA_GP(0), 0xfff));
TEST(0x3d7ffc01, de64_LDRbu(DA_V(1), DA_GP(0), 0xfff));
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), 0x1ffe));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), 0x1ffe));
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), 0x1fff));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), 0x1fff));
TEST(0, de64_STRbu(DA_V(1), DA_GP(0), 0x2000));
TEST(0, de64_LDRbu(DA_V(1), DA_GP(0), 0x2000));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), -0x1));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), -0x1));
TEST(0x7d000001, de64_STRhu(DA_V(1), DA_GP(0), 0));
TEST(0x7d400001, de64_LDRhu(DA_V(1), DA_GP(0), 0));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), 0x1));
TEST(0x7d000401, de64_STRhu(DA_V(1), DA_GP(0), 0x2));
TEST(0x7d400401, de64_LDRhu(DA_V(1), DA_GP(0), 0x2));
TEST(0x7d0007e1, de64_STRhu(DA_V(1), DA_SP, 0x2));
TEST(0x7d4007e1, de64_LDRhu(DA_V(1), DA_SP, 0x2));
TEST(0x7d1ffc01, de64_STRhu(DA_V(1), DA_GP(0), 0xffe));
TEST(0x7d5ffc01, de64_LDRhu(DA_V(1), DA_GP(0), 0xffe));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), 0xfff));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), 0xfff));
TEST(0x7d200001, de64_STRhu(DA_V(1), DA_GP(0), 0x1000));
TEST(0x7d600001, de64_LDRhu(DA_V(1), DA_GP(0), 0x1000));
TEST(0x7d3ffc01, de64_STRhu(DA_V(1), DA_GP(0), 0x1ffe));
TEST(0x7d7ffc01, de64_LDRhu(DA_V(1), DA_GP(0), 0x1ffe));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), 0x1fff));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), 0x1fff));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), 0x2000));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), 0x2000));
TEST(0, de64_STRhu(DA_V(1), DA_GP(0), 0x4000));
TEST(0, de64_LDRhu(DA_V(1), DA_GP(0), 0x4000));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), -0x1));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), -0x1));
TEST(0xbd000001, de64_STRsu(DA_V(1), DA_GP(0), 0));
TEST(0xbd400001, de64_LDRsu(DA_V(1), DA_GP(0), 0));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0x2));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0x2));
TEST(0xbd000401, de64_STRsu(DA_V(1), DA_GP(0), 0x4));
TEST(0xbd400401, de64_LDRsu(DA_V(1), DA_GP(0), 0x4));
TEST(0xbd0007e1, de64_STRsu(DA_V(1), DA_SP, 0x4));
TEST(0xbd4007e1, de64_LDRsu(DA_V(1), DA_SP, 0x4));
TEST(0xbd0ffc01, de64_STRsu(DA_V(1), DA_GP(0), 0xffc));
TEST(0xbd4ffc01, de64_LDRsu(DA_V(1), DA_GP(0), 0xffc));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0xfff));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0xfff));
TEST(0xbd300001, de64_STRsu(DA_V(1), DA_GP(0), 0x3000));
TEST(0xbd700001, de64_LDRsu(DA_V(1), DA_GP(0), 0x3000));
TEST(0xbd3ffc01, de64_STRsu(DA_V(1), DA_GP(0), 0x3ffc));
TEST(0xbd7ffc01, de64_LDRsu(DA_V(1), DA_GP(0), 0x3ffc));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0x3fff));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0x3fff));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0x4000));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0x4000));
TEST(0, de64_STRsu(DA_V(1), DA_GP(0), 0x8000));
TEST(0, de64_LDRsu(DA_V(1), DA_GP(0), 0x8000));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), -0x1));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), -0x1));
TEST(0xfd000001, de64_STRdu(DA_V(1), DA_GP(0), 0));
TEST(0xfd400001, de64_LDRdu(DA_V(1), DA_GP(0), 0));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x2));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x2));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x4));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x4));
TEST(0xfd000401, de64_STRdu(DA_V(1), DA_GP(0), 0x8));
TEST(0xfd400401, de64_LDRdu(DA_V(1), DA_GP(0), 0x8));
TEST(0xfd0007e1, de64_STRdu(DA_V(1), DA_SP, 0x8));
TEST(0xfd4007e1, de64_LDRdu(DA_V(1), DA_SP, 0x8));
TEST(0xfd07fc01, de64_STRdu(DA_V(1), DA_GP(0), 0xff8));
TEST(0xfd47fc01, de64_LDRdu(DA_V(1), DA_GP(0), 0xff8));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0xfff));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0xfff));
TEST(0xfd380001, de64_STRdu(DA_V(1), DA_GP(0), 0x7000));
TEST(0xfd780001, de64_LDRdu(DA_V(1), DA_GP(0), 0x7000));
TEST(0xfd3ffc01, de64_STRdu(DA_V(1), DA_GP(0), 0x7ff8));
TEST(0xfd7ffc01, de64_LDRdu(DA_V(1), DA_GP(0), 0x7ff8));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x7fff));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x7fff));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x8000));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x8000));
TEST(0, de64_STRdu(DA_V(1), DA_GP(0), 0x10000));
TEST(0, de64_LDRdu(DA_V(1), DA_GP(0), 0x10000));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), -0x1));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), -0x1));
TEST(0x3d800001, de64_STRqu(DA_V(1), DA_GP(0), 0));
TEST(0x3dc00001, de64_LDRqu(DA_V(1), DA_GP(0), 0));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x1));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x2));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x2));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x4));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x4));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x8));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x8));
TEST(0x3d800401, de64_STRqu(DA_V(1), DA_GP(0), 0x10));
TEST(0x3dc00401, de64_LDRqu(DA_V(1), DA_GP(0), 0x10));
TEST(0x3d8007e1, de64_STRqu(DA_V(1), DA_SP, 0x10));
TEST(0x3dc007e1, de64_LDRqu(DA_V(1), DA_SP, 0x10));
TEST(0x3d83fc01, de64_STRqu(DA_V(1), DA_GP(0), 0xff0));
TEST(0x3dc3fc01, de64_LDRqu(DA_V(1), DA_GP(0), 0xff0));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0xfff));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0xfff));
TEST(0x3dbc0001, de64_STRqu(DA_V(1), DA_GP(0), 0xf000));
TEST(0x3dfc0001, de64_LDRqu(DA_V(1), DA_GP(0), 0xf000));
TEST(0x3dbffc01, de64_STRqu(DA_V(1), DA_GP(0), 0xfff0));
TEST(0x3dfffc01, de64_LDRqu(DA_V(1), DA_GP(0), 0xfff0));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0xffff));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0xffff));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x10000));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x10000));
TEST(0, de64_STRqu(DA_V(1), DA_GP(0), 0x20000));
TEST(0, de64_LDRqu(DA_V(1), DA_GP(0), 0x20000));

// STUR/LDUR and STR/LDR pre/post-indexed
TEST(0, de64_STURb(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDURb(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRb_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRb_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRb_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRb_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STURb(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDURb(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRb_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRb_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRb_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRb_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0x3c100001, de64_STURb(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c500001, de64_LDURb(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c100401, de64_STRb_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c500401, de64_LDRb_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c100c01, de64_STRb_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c500c01, de64_LDRb_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c101001, de64_STURb(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c501001, de64_LDURb(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c101401, de64_STRb_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c501401, de64_LDRb_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c101c01, de64_STRb_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c501c01, de64_LDRb_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c1ff001, de64_STURb(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c5ff001, de64_LDURb(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c1ff401, de64_STRb_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c5ff401, de64_LDRb_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c1ffc01, de64_STRb_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c5ffc01, de64_LDRb_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c000001, de64_STURb(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c400001, de64_LDURb(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c000401, de64_STRb_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c400401, de64_LDRb_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c000c01, de64_STRb_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c400c01, de64_LDRb_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c0013e1, de64_STURb(DA_V(1), DA_SP, 0x1));
TEST(0x3c4013e1, de64_LDURb(DA_V(1), DA_SP, 0x1));
TEST(0x3c0017e1, de64_STRb_post(DA_V(1), DA_SP, 0x1));
TEST(0x3c4017e1, de64_LDRb_post(DA_V(1), DA_SP, 0x1));
TEST(0x3c001fe1, de64_STRb_pre(DA_V(1), DA_SP, 0x1));
TEST(0x3c401fe1, de64_LDRb_pre(DA_V(1), DA_SP, 0x1));
TEST(0x3c001001, de64_STURb(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c401001, de64_LDURb(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c001401, de64_STRb_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c401401, de64_LDRb_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c001c01, de64_STRb_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c401c01, de64_LDRb_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c0ff001, de64_STURb(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c4ff001, de64_LDURb(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c0ff401, de64_STRb_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c4ff401, de64_LDRb_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c0ffc01, de64_STRb_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c4ffc01, de64_LDRb_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0, de64_STURb(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDURb(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRb_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRb_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRb_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRb_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STURb(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDURb(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRb_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRb_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRb_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRb_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STURh(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDURh(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRh_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRh_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRh_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRh_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STURh(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDURh(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRh_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRh_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRh_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRh_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0x7c100001, de64_STURh(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c500001, de64_LDURh(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c100401, de64_STRh_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c500401, de64_LDRh_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c100c01, de64_STRh_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c500c01, de64_LDRh_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x7c101001, de64_STURh(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c501001, de64_LDURh(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c101401, de64_STRh_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c501401, de64_LDRh_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c101c01, de64_STRh_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c501c01, de64_LDRh_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x7c1ff001, de64_STURh(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c5ff001, de64_LDURh(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c1ff401, de64_STRh_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c5ff401, de64_LDRh_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c1ffc01, de64_STRh_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c5ffc01, de64_LDRh_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x7c000001, de64_STURh(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c400001, de64_LDURh(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c000401, de64_STRh_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c400401, de64_LDRh_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c000c01, de64_STRh_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c400c01, de64_LDRh_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x7c0013e1, de64_STURh(DA_V(1), DA_SP, 0x1));
TEST(0x7c4013e1, de64_LDURh(DA_V(1), DA_SP, 0x1));
TEST(0x7c0017e1, de64_STRh_post(DA_V(1), DA_SP, 0x1));
TEST(0x7c4017e1, de64_LDRh_post(DA_V(1), DA_SP, 0x1));
TEST(0x7c001fe1, de64_STRh_pre(DA_V(1), DA_SP, 0x1));
TEST(0x7c401fe1, de64_LDRh_pre(DA_V(1), DA_SP, 0x1));
TEST(0x7c001001, de64_STURh(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c401001, de64_LDURh(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c001401, de64_STRh_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c401401, de64_LDRh_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c001c01, de64_STRh_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c401c01, de64_LDRh_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x7c0ff001, de64_STURh(DA_V(1), DA_GP(0), 0xff));
TEST(0x7c4ff001, de64_LDURh(DA_V(1), DA_GP(0), 0xff));
TEST(0x7c0ff401, de64_STRh_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x7c4ff401, de64_LDRh_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x7c0ffc01, de64_STRh_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0x7c4ffc01, de64_LDRh_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0, de64_STURh(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDURh(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRh_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRh_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRh_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRh_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STURh(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDURh(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRh_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRh_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRh_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRh_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STURs(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDURs(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRs_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRs_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRs_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRs_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STURs(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDURs(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRs_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRs_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRs_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRs_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0xbc100001, de64_STURs(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc500001, de64_LDURs(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc100401, de64_STRs_post(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc500401, de64_LDRs_post(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc100c01, de64_STRs_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc500c01, de64_LDRs_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0xbc101001, de64_STURs(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc501001, de64_LDURs(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc101401, de64_STRs_post(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc501401, de64_LDRs_post(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc101c01, de64_STRs_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc501c01, de64_LDRs_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0xbc1ff001, de64_STURs(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc5ff001, de64_LDURs(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc1ff401, de64_STRs_post(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc5ff401, de64_LDRs_post(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc1ffc01, de64_STRs_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc5ffc01, de64_LDRs_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0xbc000001, de64_STURs(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc400001, de64_LDURs(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc000401, de64_STRs_post(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc400401, de64_LDRs_post(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc000c01, de64_STRs_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc400c01, de64_LDRs_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0xbc0013e1, de64_STURs(DA_V(1), DA_SP, 0x1));
TEST(0xbc4013e1, de64_LDURs(DA_V(1), DA_SP, 0x1));
TEST(0xbc0017e1, de64_STRs_post(DA_V(1), DA_SP, 0x1));
TEST(0xbc4017e1, de64_LDRs_post(DA_V(1), DA_SP, 0x1));
TEST(0xbc001fe1, de64_STRs_pre(DA_V(1), DA_SP, 0x1));
TEST(0xbc401fe1, de64_LDRs_pre(DA_V(1), DA_SP, 0x1));
TEST(0xbc001001, de64_STURs(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc401001, de64_LDURs(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc001401, de64_STRs_post(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc401401, de64_LDRs_post(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc001c01, de64_STRs_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc401c01, de64_LDRs_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0xbc0ff001, de64_STURs(DA_V(1), DA_GP(0), 0xff));
TEST(0xbc4ff001, de64_LDURs(DA_V(1), DA_GP(0), 0xff));
TEST(0xbc0ff401, de64_STRs_post(DA_V(1), DA_GP(0), 0xff));
TEST(0xbc4ff401, de64_LDRs_post(DA_V(1), DA_GP(0), 0xff));
TEST(0xbc0ffc01, de64_STRs_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0xbc4ffc01, de64_LDRs_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0, de64_STURs(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDURs(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRs_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRs_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRs_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRs_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STURs(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDURs(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRs_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRs_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRs_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRs_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STURd(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDURd(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRd_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRd_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRd_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRd_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STURd(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDURd(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRd_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRd_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRd_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRd_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0xfc100001, de64_STURd(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc500001, de64_LDURd(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc100401, de64_STRd_post(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc500401, de64_LDRd_post(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc100c01, de64_STRd_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc500c01, de64_LDRd_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0xfc101001, de64_STURd(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc501001, de64_LDURd(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc101401, de64_STRd_post(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc501401, de64_LDRd_post(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc101c01, de64_STRd_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc501c01, de64_LDRd_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0xfc1ff001, de64_STURd(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc5ff001, de64_LDURd(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc1ff401, de64_STRd_post(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc5ff401, de64_LDRd_post(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc1ffc01, de64_STRd_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc5ffc01, de64_LDRd_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0xfc000001, de64_STURd(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc400001, de64_LDURd(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc000401, de64_STRd_post(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc400401, de64_LDRd_post(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc000c01, de64_STRd_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc400c01, de64_LDRd_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0xfc0013e1, de64_STURd(DA_V(1), DA_SP, 0x1));
TEST(0xfc4013e1, de64_LDURd(DA_V(1), DA_SP, 0x1));
TEST(0xfc0017e1, de64_STRd_post(DA_V(1), DA_SP, 0x1));
TEST(0xfc4017e1, de64_LDRd_post(DA_V(1), DA_SP, 0x1));
TEST(0xfc001fe1, de64_STRd_pre(DA_V(1), DA_SP, 0x1));
TEST(0xfc401fe1, de64_LDRd_pre(DA_V(1), DA_SP, 0x1));
TEST(0xfc001001, de64_STURd(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc401001, de64_LDURd(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc001401, de64_STRd_post(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc401401, de64_LDRd_post(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc001c01, de64_STRd_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc401c01, de64_LDRd_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0xfc0ff001, de64_STURd(DA_V(1), DA_GP(0), 0xff));
TEST(0xfc4ff001, de64_LDURd(DA_V(1), DA_GP(0), 0xff));
TEST(0xfc0ff401, de64_STRd_post(DA_V(1), DA_GP(0), 0xff));
TEST(0xfc4ff401, de64_LDRd_post(DA_V(1), DA_GP(0), 0xff));
TEST(0xfc0ffc01, de64_STRd_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0xfc4ffc01, de64_LDRd_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0, de64_STURd(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDURd(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRd_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRd_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRd_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRd_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STURd(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDURd(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRd_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRd_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRd_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRd_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STURq(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDURq(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRq_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRq_post(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STRq_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_LDRq_pre(DA_V(1), DA_GP(0), -0x1000));
TEST(0, de64_STURq(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDURq(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRq_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRq_post(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_STRq_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0, de64_LDRq_pre(DA_V(1), DA_GP(0), -0x101));
TEST(0x3c900001, de64_STURq(DA_V(1), DA_GP(0), -0x100));
TEST(0x3cd00001, de64_LDURq(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c900401, de64_STRq_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x3cd00401, de64_LDRq_post(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c900c01, de64_STRq_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x3cd00c01, de64_LDRq_pre(DA_V(1), DA_GP(0), -0x100));
TEST(0x3c901001, de64_STURq(DA_V(1), DA_GP(0), -0xff));
TEST(0x3cd01001, de64_LDURq(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c901401, de64_STRq_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x3cd01401, de64_LDRq_post(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c901c01, de64_STRq_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x3cd01c01, de64_LDRq_pre(DA_V(1), DA_GP(0), -0xff));
TEST(0x3c9ff001, de64_STURq(DA_V(1), DA_GP(0), -0x1));
TEST(0x3cdff001, de64_LDURq(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c9ff401, de64_STRq_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x3cdff401, de64_LDRq_post(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c9ffc01, de64_STRq_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x3cdffc01, de64_LDRq_pre(DA_V(1), DA_GP(0), -0x1));
TEST(0x3c800001, de64_STURq(DA_V(1), DA_GP(0), 0x0));
TEST(0x3cc00001, de64_LDURq(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c800401, de64_STRq_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x3cc00401, de64_LDRq_post(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c800c01, de64_STRq_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x3cc00c01, de64_LDRq_pre(DA_V(1), DA_GP(0), 0x0));
TEST(0x3c8013e1, de64_STURq(DA_V(1), DA_SP, 0x1));
TEST(0x3cc013e1, de64_LDURq(DA_V(1), DA_SP, 0x1));
TEST(0x3c8017e1, de64_STRq_post(DA_V(1), DA_SP, 0x1));
TEST(0x3cc017e1, de64_LDRq_post(DA_V(1), DA_SP, 0x1));
TEST(0x3c801fe1, de64_STRq_pre(DA_V(1), DA_SP, 0x1));
TEST(0x3cc01fe1, de64_LDRq_pre(DA_V(1), DA_SP, 0x1));
TEST(0x3c801001, de64_STURq(DA_V(1), DA_GP(0), 0x1));
TEST(0x3cc01001, de64_LDURq(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c801401, de64_STRq_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x3cc01401, de64_LDRq_post(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c801c01, de64_STRq_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x3cc01c01, de64_LDRq_pre(DA_V(1), DA_GP(0), 0x1));
TEST(0x3c8ff001, de64_STURq(DA_V(1), DA_GP(0), 0xff));
TEST(0x3ccff001, de64_LDURq(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c8ff401, de64_STRq_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x3ccff401, de64_LDRq_post(DA_V(1), DA_GP(0), 0xff));
TEST(0x3c8ffc01, de64_STRq_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0x3ccffc01, de64_LDRq_pre(DA_V(1), DA_GP(0), 0xff));
TEST(0, de64_STURq(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDURq(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRq_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRq_post(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STRq_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_LDRq_pre(DA_V(1), DA_GP(0), 0x100));
TEST(0, de64_STURq(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDURq(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRq_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRq_post(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_STRq_pre(DA_V(1), DA_GP(0), 0x1000));
TEST(0, de64_LDRq_pre(DA_V(1), DA_GP(0), 0x1000));
